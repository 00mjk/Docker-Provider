#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require_relative '../../../../k8s.io/apimachinery/pkg/api/resource/generated.pb'; rescue LoadError; end
begin; require_relative '../../../../k8s.io/apimachinery/pkg/apis/meta/v1/generated.pb'; rescue LoadError; end
begin; require_relative '../../../../k8s.io/apimachinery/pkg/runtime/generated.pb'; rescue LoadError; end
begin; require_relative '../../../../k8s.io/apimachinery/pkg/runtime/schema/generated.pb'; rescue LoadError; end
begin; require_relative '../../../../k8s.io/apimachinery/pkg/util/intstr/generated.pb'; rescue LoadError; end

module K8s
  module Io
    module Api
      module Core
        module V1
          # forward declarations
          class AWSElasticBlockStoreVolumeSource < ::ProtocolBuffers::Message; end
          class Affinity < ::ProtocolBuffers::Message; end
          class AttachedVolume < ::ProtocolBuffers::Message; end
          class AvoidPods < ::ProtocolBuffers::Message; end
          class AzureDiskVolumeSource < ::ProtocolBuffers::Message; end
          class AzureFilePersistentVolumeSource < ::ProtocolBuffers::Message; end
          class AzureFileVolumeSource < ::ProtocolBuffers::Message; end
          class Binding < ::ProtocolBuffers::Message; end
          class CSIPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class CSIVolumeSource < ::ProtocolBuffers::Message; end
          class Capabilities < ::ProtocolBuffers::Message; end
          class CephFSPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class CephFSVolumeSource < ::ProtocolBuffers::Message; end
          class CinderPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class CinderVolumeSource < ::ProtocolBuffers::Message; end
          class ClientIPConfig < ::ProtocolBuffers::Message; end
          class ComponentCondition < ::ProtocolBuffers::Message; end
          class ComponentStatus < ::ProtocolBuffers::Message; end
          class ComponentStatusList < ::ProtocolBuffers::Message; end
          class ConfigMap < ::ProtocolBuffers::Message; end
          class ConfigMapEnvSource < ::ProtocolBuffers::Message; end
          class ConfigMapKeySelector < ::ProtocolBuffers::Message; end
          class ConfigMapList < ::ProtocolBuffers::Message; end
          class ConfigMapNodeConfigSource < ::ProtocolBuffers::Message; end
          class ConfigMapProjection < ::ProtocolBuffers::Message; end
          class ConfigMapVolumeSource < ::ProtocolBuffers::Message; end
          class Container < ::ProtocolBuffers::Message; end
          class ContainerImage < ::ProtocolBuffers::Message; end
          class ContainerPort < ::ProtocolBuffers::Message; end
          class ContainerState < ::ProtocolBuffers::Message; end
          class ContainerStateRunning < ::ProtocolBuffers::Message; end
          class ContainerStateTerminated < ::ProtocolBuffers::Message; end
          class ContainerStateWaiting < ::ProtocolBuffers::Message; end
          class ContainerStatus < ::ProtocolBuffers::Message; end
          class DaemonEndpoint < ::ProtocolBuffers::Message; end
          class DownwardAPIProjection < ::ProtocolBuffers::Message; end
          class DownwardAPIVolumeFile < ::ProtocolBuffers::Message; end
          class DownwardAPIVolumeSource < ::ProtocolBuffers::Message; end
          class EmptyDirVolumeSource < ::ProtocolBuffers::Message; end
          class EndpointAddress < ::ProtocolBuffers::Message; end
          class EndpointPort < ::ProtocolBuffers::Message; end
          class EndpointSubset < ::ProtocolBuffers::Message; end
          class Endpoints < ::ProtocolBuffers::Message; end
          class EndpointsList < ::ProtocolBuffers::Message; end
          class EnvFromSource < ::ProtocolBuffers::Message; end
          class EnvVar < ::ProtocolBuffers::Message; end
          class EnvVarSource < ::ProtocolBuffers::Message; end
          class EphemeralContainer < ::ProtocolBuffers::Message; end
          class EphemeralContainerCommon < ::ProtocolBuffers::Message; end
          class EphemeralContainers < ::ProtocolBuffers::Message; end
          class EphemeralVolumeSource < ::ProtocolBuffers::Message; end
          class Event < ::ProtocolBuffers::Message; end
          class EventList < ::ProtocolBuffers::Message; end
          class EventSeries < ::ProtocolBuffers::Message; end
          class EventSource < ::ProtocolBuffers::Message; end
          class ExecAction < ::ProtocolBuffers::Message; end
          class FCVolumeSource < ::ProtocolBuffers::Message; end
          class FlexPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class FlexVolumeSource < ::ProtocolBuffers::Message; end
          class FlockerVolumeSource < ::ProtocolBuffers::Message; end
          class GCEPersistentDiskVolumeSource < ::ProtocolBuffers::Message; end
          class GitRepoVolumeSource < ::ProtocolBuffers::Message; end
          class GlusterfsPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class GlusterfsVolumeSource < ::ProtocolBuffers::Message; end
          class HTTPGetAction < ::ProtocolBuffers::Message; end
          class HTTPHeader < ::ProtocolBuffers::Message; end
          class Handler < ::ProtocolBuffers::Message; end
          class HostAlias < ::ProtocolBuffers::Message; end
          class HostPathVolumeSource < ::ProtocolBuffers::Message; end
          class ISCSIPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class ISCSIVolumeSource < ::ProtocolBuffers::Message; end
          class KeyToPath < ::ProtocolBuffers::Message; end
          class Lifecycle < ::ProtocolBuffers::Message; end
          class LimitRange < ::ProtocolBuffers::Message; end
          class LimitRangeItem < ::ProtocolBuffers::Message; end
          class LimitRangeList < ::ProtocolBuffers::Message; end
          class LimitRangeSpec < ::ProtocolBuffers::Message; end
          class List < ::ProtocolBuffers::Message; end
          class LoadBalancerIngress < ::ProtocolBuffers::Message; end
          class LoadBalancerStatus < ::ProtocolBuffers::Message; end
          class LocalObjectReference < ::ProtocolBuffers::Message; end
          class LocalVolumeSource < ::ProtocolBuffers::Message; end
          class NFSVolumeSource < ::ProtocolBuffers::Message; end
          class Namespace < ::ProtocolBuffers::Message; end
          class NamespaceCondition < ::ProtocolBuffers::Message; end
          class NamespaceList < ::ProtocolBuffers::Message; end
          class NamespaceSpec < ::ProtocolBuffers::Message; end
          class NamespaceStatus < ::ProtocolBuffers::Message; end
          class Node < ::ProtocolBuffers::Message; end
          class NodeAddress < ::ProtocolBuffers::Message; end
          class NodeAffinity < ::ProtocolBuffers::Message; end
          class NodeCondition < ::ProtocolBuffers::Message; end
          class NodeConfigSource < ::ProtocolBuffers::Message; end
          class NodeConfigStatus < ::ProtocolBuffers::Message; end
          class NodeDaemonEndpoints < ::ProtocolBuffers::Message; end
          class NodeList < ::ProtocolBuffers::Message; end
          class NodeProxyOptions < ::ProtocolBuffers::Message; end
          class NodeResources < ::ProtocolBuffers::Message; end
          class NodeSelector < ::ProtocolBuffers::Message; end
          class NodeSelectorRequirement < ::ProtocolBuffers::Message; end
          class NodeSelectorTerm < ::ProtocolBuffers::Message; end
          class NodeSpec < ::ProtocolBuffers::Message; end
          class NodeStatus < ::ProtocolBuffers::Message; end
          class NodeSystemInfo < ::ProtocolBuffers::Message; end
          class ObjectFieldSelector < ::ProtocolBuffers::Message; end
          class ObjectReference < ::ProtocolBuffers::Message; end
          class PersistentVolume < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaim < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaimCondition < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaimList < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaimSpec < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaimStatus < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaimTemplate < ::ProtocolBuffers::Message; end
          class PersistentVolumeClaimVolumeSource < ::ProtocolBuffers::Message; end
          class PersistentVolumeList < ::ProtocolBuffers::Message; end
          class PersistentVolumeSource < ::ProtocolBuffers::Message; end
          class PersistentVolumeSpec < ::ProtocolBuffers::Message; end
          class PersistentVolumeStatus < ::ProtocolBuffers::Message; end
          class PhotonPersistentDiskVolumeSource < ::ProtocolBuffers::Message; end
          class Pod < ::ProtocolBuffers::Message; end
          class PodAffinity < ::ProtocolBuffers::Message; end
          class PodAffinityTerm < ::ProtocolBuffers::Message; end
          class PodAntiAffinity < ::ProtocolBuffers::Message; end
          class PodAttachOptions < ::ProtocolBuffers::Message; end
          class PodCondition < ::ProtocolBuffers::Message; end
          class PodDNSConfig < ::ProtocolBuffers::Message; end
          class PodDNSConfigOption < ::ProtocolBuffers::Message; end
          class PodExecOptions < ::ProtocolBuffers::Message; end
          class PodIP < ::ProtocolBuffers::Message; end
          class PodList < ::ProtocolBuffers::Message; end
          class PodLogOptions < ::ProtocolBuffers::Message; end
          class PodPortForwardOptions < ::ProtocolBuffers::Message; end
          class PodProxyOptions < ::ProtocolBuffers::Message; end
          class PodReadinessGate < ::ProtocolBuffers::Message; end
          class PodSecurityContext < ::ProtocolBuffers::Message; end
          class PodSignature < ::ProtocolBuffers::Message; end
          class PodSpec < ::ProtocolBuffers::Message; end
          class PodStatus < ::ProtocolBuffers::Message; end
          class PodStatusResult < ::ProtocolBuffers::Message; end
          class PodTemplate < ::ProtocolBuffers::Message; end
          class PodTemplateList < ::ProtocolBuffers::Message; end
          class PodTemplateSpec < ::ProtocolBuffers::Message; end
          class PortStatus < ::ProtocolBuffers::Message; end
          class PortworxVolumeSource < ::ProtocolBuffers::Message; end
          class Preconditions < ::ProtocolBuffers::Message; end
          class PreferAvoidPodsEntry < ::ProtocolBuffers::Message; end
          class PreferredSchedulingTerm < ::ProtocolBuffers::Message; end
          class Probe < ::ProtocolBuffers::Message; end
          class ProjectedVolumeSource < ::ProtocolBuffers::Message; end
          class QuobyteVolumeSource < ::ProtocolBuffers::Message; end
          class RBDPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class RBDVolumeSource < ::ProtocolBuffers::Message; end
          class RangeAllocation < ::ProtocolBuffers::Message; end
          class ReplicationController < ::ProtocolBuffers::Message; end
          class ReplicationControllerCondition < ::ProtocolBuffers::Message; end
          class ReplicationControllerList < ::ProtocolBuffers::Message; end
          class ReplicationControllerSpec < ::ProtocolBuffers::Message; end
          class ReplicationControllerStatus < ::ProtocolBuffers::Message; end
          class ResourceFieldSelector < ::ProtocolBuffers::Message; end
          class ResourceQuota < ::ProtocolBuffers::Message; end
          class ResourceQuotaList < ::ProtocolBuffers::Message; end
          class ResourceQuotaSpec < ::ProtocolBuffers::Message; end
          class ResourceQuotaStatus < ::ProtocolBuffers::Message; end
          class ResourceRequirements < ::ProtocolBuffers::Message; end
          class SELinuxOptions < ::ProtocolBuffers::Message; end
          class ScaleIOPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class ScaleIOVolumeSource < ::ProtocolBuffers::Message; end
          class ScopeSelector < ::ProtocolBuffers::Message; end
          class ScopedResourceSelectorRequirement < ::ProtocolBuffers::Message; end
          class SeccompProfile < ::ProtocolBuffers::Message; end
          class Secret < ::ProtocolBuffers::Message; end
          class SecretEnvSource < ::ProtocolBuffers::Message; end
          class SecretKeySelector < ::ProtocolBuffers::Message; end
          class SecretList < ::ProtocolBuffers::Message; end
          class SecretProjection < ::ProtocolBuffers::Message; end
          class SecretReference < ::ProtocolBuffers::Message; end
          class SecretVolumeSource < ::ProtocolBuffers::Message; end
          class SecurityContext < ::ProtocolBuffers::Message; end
          class SerializedReference < ::ProtocolBuffers::Message; end
          class Service < ::ProtocolBuffers::Message; end
          class ServiceAccount < ::ProtocolBuffers::Message; end
          class ServiceAccountList < ::ProtocolBuffers::Message; end
          class ServiceAccountTokenProjection < ::ProtocolBuffers::Message; end
          class ServiceList < ::ProtocolBuffers::Message; end
          class ServicePort < ::ProtocolBuffers::Message; end
          class ServiceProxyOptions < ::ProtocolBuffers::Message; end
          class ServiceSpec < ::ProtocolBuffers::Message; end
          class ServiceStatus < ::ProtocolBuffers::Message; end
          class SessionAffinityConfig < ::ProtocolBuffers::Message; end
          class StorageOSPersistentVolumeSource < ::ProtocolBuffers::Message; end
          class StorageOSVolumeSource < ::ProtocolBuffers::Message; end
          class Sysctl < ::ProtocolBuffers::Message; end
          class TCPSocketAction < ::ProtocolBuffers::Message; end
          class Taint < ::ProtocolBuffers::Message; end
          class Toleration < ::ProtocolBuffers::Message; end
          class TopologySelectorLabelRequirement < ::ProtocolBuffers::Message; end
          class TopologySelectorTerm < ::ProtocolBuffers::Message; end
          class TopologySpreadConstraint < ::ProtocolBuffers::Message; end
          class TypedLocalObjectReference < ::ProtocolBuffers::Message; end
          class Volume < ::ProtocolBuffers::Message; end
          class VolumeDevice < ::ProtocolBuffers::Message; end
          class VolumeMount < ::ProtocolBuffers::Message; end
          class VolumeNodeAffinity < ::ProtocolBuffers::Message; end
          class VolumeProjection < ::ProtocolBuffers::Message; end
          class VolumeSource < ::ProtocolBuffers::Message; end
          class VsphereVirtualDiskVolumeSource < ::ProtocolBuffers::Message; end
          class WeightedPodAffinityTerm < ::ProtocolBuffers::Message; end
          class WindowsSecurityContextOptions < ::ProtocolBuffers::Message; end

          class AWSElasticBlockStoreVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource"

            optional :string, :volumeID, 1
            optional :string, :fsType, 2
            optional :int32, :partition, 3
            optional :bool, :readOnly, 4
          end

          class Affinity < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Affinity"

            optional ::K8s::Io::Api::Core::V1::NodeAffinity, :nodeAffinity, 1
            optional ::K8s::Io::Api::Core::V1::PodAffinity, :podAffinity, 2
            optional ::K8s::Io::Api::Core::V1::PodAntiAffinity, :podAntiAffinity, 3
          end

          class AttachedVolume < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.AttachedVolume"

            optional :string, :name, 1
            optional :string, :devicePath, 2
          end

          class AvoidPods < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.AvoidPods"

            repeated ::K8s::Io::Api::Core::V1::PreferAvoidPodsEntry, :preferAvoidPods, 1
          end

          class AzureDiskVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.AzureDiskVolumeSource"

            optional :string, :diskName, 1
            optional :string, :diskURI, 2
            optional :string, :cachingMode, 3
            optional :string, :fsType, 4
            optional :bool, :readOnly, 5
            optional :string, :kind, 6
          end

          class AzureFilePersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.AzureFilePersistentVolumeSource"

            optional :string, :secretName, 1
            optional :string, :shareName, 2
            optional :bool, :readOnly, 3
            optional :string, :secretNamespace, 4
          end

          class AzureFileVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.AzureFileVolumeSource"

            optional :string, :secretName, 1
            optional :string, :shareName, 2
            optional :bool, :readOnly, 3
          end

          class Binding < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Binding"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::ObjectReference, :target, 2
          end

          class CSIPersistentVolumeSource < ::ProtocolBuffers::Message
            # forward declarations
            class VolumeAttributesEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.CSIPersistentVolumeSource"

            # nested messages
            class VolumeAttributesEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.CSIPersistentVolumeSource.VolumeAttributesEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            optional :string, :driver, 1
            optional :string, :volumeHandle, 2
            optional :bool, :readOnly, 3
            optional :string, :fsType, 4
            repeated ::K8s::Io::Api::Core::V1::CSIPersistentVolumeSource::VolumeAttributesEntry, :volumeAttributes, 5
            optional ::K8s::Io::Api::Core::V1::SecretReference, :controllerPublishSecretRef, 6
            optional ::K8s::Io::Api::Core::V1::SecretReference, :nodeStageSecretRef, 7
            optional ::K8s::Io::Api::Core::V1::SecretReference, :nodePublishSecretRef, 8
            optional ::K8s::Io::Api::Core::V1::SecretReference, :controllerExpandSecretRef, 9
          end

          class CSIVolumeSource < ::ProtocolBuffers::Message
            # forward declarations
            class VolumeAttributesEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.CSIVolumeSource"

            # nested messages
            class VolumeAttributesEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.CSIVolumeSource.VolumeAttributesEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            optional :string, :driver, 1
            optional :bool, :readOnly, 2
            optional :string, :fsType, 3
            repeated ::K8s::Io::Api::Core::V1::CSIVolumeSource::VolumeAttributesEntry, :volumeAttributes, 4
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :nodePublishSecretRef, 5
          end

          class Capabilities < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Capabilities"

            repeated :string, :add, 1
            repeated :string, :drop, 2
          end

          class CephFSPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.CephFSPersistentVolumeSource"

            repeated :string, :monitors, 1
            optional :string, :path, 2
            optional :string, :user, 3
            optional :string, :secretFile, 4
            optional ::K8s::Io::Api::Core::V1::SecretReference, :secretRef, 5
            optional :bool, :readOnly, 6
          end

          class CephFSVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.CephFSVolumeSource"

            repeated :string, :monitors, 1
            optional :string, :path, 2
            optional :string, :user, 3
            optional :string, :secretFile, 4
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 5
            optional :bool, :readOnly, 6
          end

          class CinderPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.CinderPersistentVolumeSource"

            optional :string, :volumeID, 1
            optional :string, :fsType, 2
            optional :bool, :readOnly, 3
            optional ::K8s::Io::Api::Core::V1::SecretReference, :secretRef, 4
          end

          class CinderVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.CinderVolumeSource"

            optional :string, :volumeID, 1
            optional :string, :fsType, 2
            optional :bool, :readOnly, 3
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 4
          end

          class ClientIPConfig < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ClientIPConfig"

            optional :int32, :timeoutSeconds, 1
          end

          class ComponentCondition < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ComponentCondition"

            optional :string, :type, 1
            optional :string, :status, 2
            optional :string, :message, 3
            optional :string, :error, 4
          end

          class ComponentStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ComponentStatus"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ComponentCondition, :conditions, 2
          end

          class ComponentStatusList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ComponentStatusList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ComponentStatus, :items, 2
          end

          class ConfigMap < ::ProtocolBuffers::Message
            # forward declarations
            class DataEntry < ::ProtocolBuffers::Message; end
            class BinaryDataEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMap"

            # nested messages
            class DataEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ConfigMap.DataEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            class BinaryDataEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ConfigMap.BinaryDataEntry"

              optional :string, :key, 1
              optional :bytes, :value, 2
            end

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional :bool, :immutable, 4
            repeated ::K8s::Io::Api::Core::V1::ConfigMap::DataEntry, :data, 2
            repeated ::K8s::Io::Api::Core::V1::ConfigMap::BinaryDataEntry, :binaryData, 3
          end

          class ConfigMapEnvSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMapEnvSource"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            optional :bool, :optional, 2
          end

          class ConfigMapKeySelector < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMapKeySelector"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            optional :string, :key, 2
            optional :bool, :optional, 3
          end

          class ConfigMapList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMapList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ConfigMap, :items, 2
          end

          class ConfigMapNodeConfigSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMapNodeConfigSource"

            optional :string, :namespace, 1
            optional :string, :name, 2
            optional :string, :uid, 3
            optional :string, :resourceVersion, 4
            optional :string, :kubeletConfigKey, 5
          end

          class ConfigMapProjection < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMapProjection"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            repeated ::K8s::Io::Api::Core::V1::KeyToPath, :items, 2
            optional :bool, :optional, 4
          end

          class ConfigMapVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ConfigMapVolumeSource"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            repeated ::K8s::Io::Api::Core::V1::KeyToPath, :items, 2
            optional :int32, :defaultMode, 3
            optional :bool, :optional, 4
          end

          class Container < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Container"

            optional :string, :name, 1
            optional :string, :image, 2
            repeated :string, :command, 3
            repeated :string, :args, 4
            optional :string, :workingDir, 5
            repeated ::K8s::Io::Api::Core::V1::ContainerPort, :ports, 6
            repeated ::K8s::Io::Api::Core::V1::EnvFromSource, :envFrom, 19
            repeated ::K8s::Io::Api::Core::V1::EnvVar, :env, 7
            optional ::K8s::Io::Api::Core::V1::ResourceRequirements, :resources, 8
            repeated ::K8s::Io::Api::Core::V1::VolumeMount, :volumeMounts, 9
            repeated ::K8s::Io::Api::Core::V1::VolumeDevice, :volumeDevices, 21
            optional ::K8s::Io::Api::Core::V1::Probe, :livenessProbe, 10
            optional ::K8s::Io::Api::Core::V1::Probe, :readinessProbe, 11
            optional ::K8s::Io::Api::Core::V1::Probe, :startupProbe, 22
            optional ::K8s::Io::Api::Core::V1::Lifecycle, :lifecycle, 12
            optional :string, :terminationMessagePath, 13
            optional :string, :terminationMessagePolicy, 20
            optional :string, :imagePullPolicy, 14
            optional ::K8s::Io::Api::Core::V1::SecurityContext, :securityContext, 15
            optional :bool, :stdin, 16
            optional :bool, :stdinOnce, 17
            optional :bool, :tty, 18
          end

          class ContainerImage < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerImage"

            repeated :string, :names, 1
            optional :int64, :sizeBytes, 2
          end

          class ContainerPort < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerPort"

            optional :string, :name, 1
            optional :int32, :hostPort, 2
            optional :int32, :containerPort, 3
            optional :string, :protocol, 4
            optional :string, :hostIP, 5
          end

          class ContainerState < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerState"

            optional ::K8s::Io::Api::Core::V1::ContainerStateWaiting, :waiting, 1
            optional ::K8s::Io::Api::Core::V1::ContainerStateRunning, :running, 2
            optional ::K8s::Io::Api::Core::V1::ContainerStateTerminated, :terminated, 3
          end

          class ContainerStateRunning < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerStateRunning"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :startedAt, 1
          end

          class ContainerStateTerminated < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerStateTerminated"

            optional :int32, :exitCode, 1
            optional :int32, :signal, 2
            optional :string, :reason, 3
            optional :string, :message, 4
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :startedAt, 5
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :finishedAt, 6
            optional :string, :containerID, 7
          end

          class ContainerStateWaiting < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerStateWaiting"

            optional :string, :reason, 1
            optional :string, :message, 2
          end

          class ContainerStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ContainerStatus"

            optional :string, :name, 1
            optional ::K8s::Io::Api::Core::V1::ContainerState, :state, 2
            optional ::K8s::Io::Api::Core::V1::ContainerState, :lastState, 3
            optional :bool, :ready, 4
            optional :int32, :restartCount, 5
            optional :string, :image, 6
            optional :string, :imageID, 7
            optional :string, :containerID, 8
            optional :bool, :started, 9
          end

          class DaemonEndpoint < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.DaemonEndpoint"

            optional :int32, :Port, 1
          end

          class DownwardAPIProjection < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.DownwardAPIProjection"

            repeated ::K8s::Io::Api::Core::V1::DownwardAPIVolumeFile, :items, 1
          end

          class DownwardAPIVolumeFile < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.DownwardAPIVolumeFile"

            optional :string, :path, 1
            optional ::K8s::Io::Api::Core::V1::ObjectFieldSelector, :fieldRef, 2
            optional ::K8s::Io::Api::Core::V1::ResourceFieldSelector, :resourceFieldRef, 3
            optional :int32, :mode, 4
          end

          class DownwardAPIVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.DownwardAPIVolumeSource"

            repeated ::K8s::Io::Api::Core::V1::DownwardAPIVolumeFile, :items, 1
            optional :int32, :defaultMode, 2
          end

          class EmptyDirVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EmptyDirVolumeSource"

            optional :string, :medium, 1
            optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :sizeLimit, 2
          end

          class EndpointAddress < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EndpointAddress"

            optional :string, :ip, 1
            optional :string, :hostname, 3
            optional :string, :nodeName, 4
            optional ::K8s::Io::Api::Core::V1::ObjectReference, :targetRef, 2
          end

          class EndpointPort < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EndpointPort"

            optional :string, :name, 1
            optional :int32, :port, 2
            optional :string, :protocol, 3
            optional :string, :appProtocol, 4
          end

          class EndpointSubset < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EndpointSubset"

            repeated ::K8s::Io::Api::Core::V1::EndpointAddress, :addresses, 1
            repeated ::K8s::Io::Api::Core::V1::EndpointAddress, :notReadyAddresses, 2
            repeated ::K8s::Io::Api::Core::V1::EndpointPort, :ports, 3
          end

          class Endpoints < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Endpoints"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::EndpointSubset, :subsets, 2
          end

          class EndpointsList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EndpointsList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Endpoints, :items, 2
          end

          class EnvFromSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EnvFromSource"

            optional :string, :prefix, 1
            optional ::K8s::Io::Api::Core::V1::ConfigMapEnvSource, :configMapRef, 2
            optional ::K8s::Io::Api::Core::V1::SecretEnvSource, :secretRef, 3
          end

          class EnvVar < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EnvVar"

            optional :string, :name, 1
            optional :string, :value, 2
            optional ::K8s::Io::Api::Core::V1::EnvVarSource, :valueFrom, 3
          end

          class EnvVarSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EnvVarSource"

            optional ::K8s::Io::Api::Core::V1::ObjectFieldSelector, :fieldRef, 1
            optional ::K8s::Io::Api::Core::V1::ResourceFieldSelector, :resourceFieldRef, 2
            optional ::K8s::Io::Api::Core::V1::ConfigMapKeySelector, :configMapKeyRef, 3
            optional ::K8s::Io::Api::Core::V1::SecretKeySelector, :secretKeyRef, 4
          end

          class EphemeralContainer < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EphemeralContainer"

            optional ::K8s::Io::Api::Core::V1::EphemeralContainerCommon, :ephemeralContainerCommon, 1
            optional :string, :targetContainerName, 2
          end

          class EphemeralContainerCommon < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EphemeralContainerCommon"

            optional :string, :name, 1
            optional :string, :image, 2
            repeated :string, :command, 3
            repeated :string, :args, 4
            optional :string, :workingDir, 5
            repeated ::K8s::Io::Api::Core::V1::ContainerPort, :ports, 6
            repeated ::K8s::Io::Api::Core::V1::EnvFromSource, :envFrom, 19
            repeated ::K8s::Io::Api::Core::V1::EnvVar, :env, 7
            optional ::K8s::Io::Api::Core::V1::ResourceRequirements, :resources, 8
            repeated ::K8s::Io::Api::Core::V1::VolumeMount, :volumeMounts, 9
            repeated ::K8s::Io::Api::Core::V1::VolumeDevice, :volumeDevices, 21
            optional ::K8s::Io::Api::Core::V1::Probe, :livenessProbe, 10
            optional ::K8s::Io::Api::Core::V1::Probe, :readinessProbe, 11
            optional ::K8s::Io::Api::Core::V1::Probe, :startupProbe, 22
            optional ::K8s::Io::Api::Core::V1::Lifecycle, :lifecycle, 12
            optional :string, :terminationMessagePath, 13
            optional :string, :terminationMessagePolicy, 20
            optional :string, :imagePullPolicy, 14
            optional ::K8s::Io::Api::Core::V1::SecurityContext, :securityContext, 15
            optional :bool, :stdin, 16
            optional :bool, :stdinOnce, 17
            optional :bool, :tty, 18
          end

          class EphemeralContainers < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EphemeralContainers"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::EphemeralContainer, :ephemeralContainers, 2
          end

          class EphemeralVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EphemeralVolumeSource"

            optional ::K8s::Io::Api::Core::V1::PersistentVolumeClaimTemplate, :volumeClaimTemplate, 1
            optional :bool, :readOnly, 2
          end

          class Event < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Event"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::ObjectReference, :involvedObject, 2
            optional :string, :reason, 3
            optional :string, :message, 4
            optional ::K8s::Io::Api::Core::V1::EventSource, :source, 5
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :firstTimestamp, 6
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastTimestamp, 7
            optional :int32, :count, 8
            optional :string, :type, 9
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::MicroTime, :eventTime, 10
            optional ::K8s::Io::Api::Core::V1::EventSeries, :series, 11
            optional :string, :action, 12
            optional ::K8s::Io::Api::Core::V1::ObjectReference, :related, 13
            optional :string, :reportingComponent, 14
            optional :string, :reportingInstance, 15
          end

          class EventList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EventList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Event, :items, 2
          end

          class EventSeries < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EventSeries"

            optional :int32, :count, 1
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::MicroTime, :lastObservedTime, 2
          end

          class EventSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.EventSource"

            optional :string, :component, 1
            optional :string, :host, 2
          end

          class ExecAction < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ExecAction"

            repeated :string, :command, 1
          end

          class FCVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.FCVolumeSource"

            repeated :string, :targetWWNs, 1
            optional :int32, :lun, 2
            optional :string, :fsType, 3
            optional :bool, :readOnly, 4
            repeated :string, :wwids, 5
          end

          class FlexPersistentVolumeSource < ::ProtocolBuffers::Message
            # forward declarations
            class OptionsEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.FlexPersistentVolumeSource"

            # nested messages
            class OptionsEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.FlexPersistentVolumeSource.OptionsEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            optional :string, :driver, 1
            optional :string, :fsType, 2
            optional ::K8s::Io::Api::Core::V1::SecretReference, :secretRef, 3
            optional :bool, :readOnly, 4
            repeated ::K8s::Io::Api::Core::V1::FlexPersistentVolumeSource::OptionsEntry, :options, 5
          end

          class FlexVolumeSource < ::ProtocolBuffers::Message
            # forward declarations
            class OptionsEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.FlexVolumeSource"

            # nested messages
            class OptionsEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.FlexVolumeSource.OptionsEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            optional :string, :driver, 1
            optional :string, :fsType, 2
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 3
            optional :bool, :readOnly, 4
            repeated ::K8s::Io::Api::Core::V1::FlexVolumeSource::OptionsEntry, :options, 5
          end

          class FlockerVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.FlockerVolumeSource"

            optional :string, :datasetName, 1
            optional :string, :datasetUUID, 2
          end

          class GCEPersistentDiskVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.GCEPersistentDiskVolumeSource"

            optional :string, :pdName, 1
            optional :string, :fsType, 2
            optional :int32, :partition, 3
            optional :bool, :readOnly, 4
          end

          class GitRepoVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.GitRepoVolumeSource"

            optional :string, :repository, 1
            optional :string, :revision, 2
            optional :string, :directory, 3
          end

          class GlusterfsPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.GlusterfsPersistentVolumeSource"

            optional :string, :endpoints, 1
            optional :string, :path, 2
            optional :bool, :readOnly, 3
            optional :string, :endpointsNamespace, 4
          end

          class GlusterfsVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.GlusterfsVolumeSource"

            optional :string, :endpoints, 1
            optional :string, :path, 2
            optional :bool, :readOnly, 3
          end

          class HTTPGetAction < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.HTTPGetAction"

            optional :string, :path, 1
            optional ::K8s::Io::Apimachinery::Pkg::Util::Intstr::IntOrString, :port, 2
            optional :string, :host, 3
            optional :string, :scheme, 4
            repeated ::K8s::Io::Api::Core::V1::HTTPHeader, :httpHeaders, 5
          end

          class HTTPHeader < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.HTTPHeader"

            optional :string, :name, 1
            optional :string, :value, 2
          end

          class Handler < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Handler"

            optional ::K8s::Io::Api::Core::V1::ExecAction, :exec, 1
            optional ::K8s::Io::Api::Core::V1::HTTPGetAction, :httpGet, 2
            optional ::K8s::Io::Api::Core::V1::TCPSocketAction, :tcpSocket, 3
          end

          class HostAlias < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.HostAlias"

            optional :string, :ip, 1
            repeated :string, :hostnames, 2
          end

          class HostPathVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.HostPathVolumeSource"

            optional :string, :path, 1
            optional :string, :type, 2
          end

          class ISCSIPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ISCSIPersistentVolumeSource"

            optional :string, :targetPortal, 1
            optional :string, :iqn, 2
            optional :int32, :lun, 3
            optional :string, :iscsiInterface, 4
            optional :string, :fsType, 5
            optional :bool, :readOnly, 6
            repeated :string, :portals, 7
            optional :bool, :chapAuthDiscovery, 8
            optional :bool, :chapAuthSession, 11
            optional ::K8s::Io::Api::Core::V1::SecretReference, :secretRef, 10
            optional :string, :initiatorName, 12
          end

          class ISCSIVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ISCSIVolumeSource"

            optional :string, :targetPortal, 1
            optional :string, :iqn, 2
            optional :int32, :lun, 3
            optional :string, :iscsiInterface, 4
            optional :string, :fsType, 5
            optional :bool, :readOnly, 6
            repeated :string, :portals, 7
            optional :bool, :chapAuthDiscovery, 8
            optional :bool, :chapAuthSession, 11
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 10
            optional :string, :initiatorName, 12
          end

          class KeyToPath < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.KeyToPath"

            optional :string, :key, 1
            optional :string, :path, 2
            optional :int32, :mode, 3
          end

          class Lifecycle < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Lifecycle"

            optional ::K8s::Io::Api::Core::V1::Handler, :postStart, 1
            optional ::K8s::Io::Api::Core::V1::Handler, :preStop, 2
          end

          class LimitRange < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LimitRange"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::LimitRangeSpec, :spec, 2
          end

          class LimitRangeItem < ::ProtocolBuffers::Message
            # forward declarations
            class MaxEntry < ::ProtocolBuffers::Message; end
            class MinEntry < ::ProtocolBuffers::Message; end
            class DefaultEntry < ::ProtocolBuffers::Message; end
            class DefaultRequestEntry < ::ProtocolBuffers::Message; end
            class MaxLimitRequestRatioEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeItem"

            # nested messages
            class MaxEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeItem.MaxEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class MinEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeItem.MinEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class DefaultEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeItem.DefaultEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class DefaultRequestEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeItem.DefaultRequestEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class MaxLimitRequestRatioEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeItem.MaxLimitRequestRatioEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            optional :string, :type, 1
            repeated ::K8s::Io::Api::Core::V1::LimitRangeItem::MaxEntry, :max, 2
            repeated ::K8s::Io::Api::Core::V1::LimitRangeItem::MinEntry, :min, 3
            repeated ::K8s::Io::Api::Core::V1::LimitRangeItem::DefaultEntry, :default, 4
            repeated ::K8s::Io::Api::Core::V1::LimitRangeItem::DefaultRequestEntry, :defaultRequest, 5
            repeated ::K8s::Io::Api::Core::V1::LimitRangeItem::MaxLimitRequestRatioEntry, :maxLimitRequestRatio, 6
          end

          class LimitRangeList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::LimitRange, :items, 2
          end

          class LimitRangeSpec < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LimitRangeSpec"

            repeated ::K8s::Io::Api::Core::V1::LimitRangeItem, :limits, 1
          end

          class List < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.List"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Apimachinery::Pkg::Runtime::RawExtension, :items, 2
          end

          class LoadBalancerIngress < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LoadBalancerIngress"

            optional :string, :ip, 1
            optional :string, :hostname, 2
            repeated ::K8s::Io::Api::Core::V1::PortStatus, :ports, 4
          end

          class LoadBalancerStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LoadBalancerStatus"

            repeated ::K8s::Io::Api::Core::V1::LoadBalancerIngress, :ingress, 1
          end

          class LocalObjectReference < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LocalObjectReference"

            optional :string, :name, 1
          end

          class LocalVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.LocalVolumeSource"

            optional :string, :path, 1
            optional :string, :fsType, 2
          end

          class NFSVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NFSVolumeSource"

            optional :string, :server, 1
            optional :string, :path, 2
            optional :bool, :readOnly, 3
          end

          class Namespace < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Namespace"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::NamespaceSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::NamespaceStatus, :status, 3
          end

          class NamespaceCondition < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NamespaceCondition"

            optional :string, :type, 1
            optional :string, :status, 2
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastTransitionTime, 4
            optional :string, :reason, 5
            optional :string, :message, 6
          end

          class NamespaceList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NamespaceList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Namespace, :items, 2
          end

          class NamespaceSpec < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NamespaceSpec"

            repeated :string, :finalizers, 1
          end

          class NamespaceStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NamespaceStatus"

            optional :string, :phase, 1
            repeated ::K8s::Io::Api::Core::V1::NamespaceCondition, :conditions, 2
          end

          class Node < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Node"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::NodeSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::NodeStatus, :status, 3
          end

          class NodeAddress < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeAddress"

            optional :string, :type, 1
            optional :string, :address, 2
          end

          class NodeAffinity < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeAffinity"

            optional ::K8s::Io::Api::Core::V1::NodeSelector, :requiredDuringSchedulingIgnoredDuringExecution, 1
            repeated ::K8s::Io::Api::Core::V1::PreferredSchedulingTerm, :preferredDuringSchedulingIgnoredDuringExecution, 2
          end

          class NodeCondition < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeCondition"

            optional :string, :type, 1
            optional :string, :status, 2
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastHeartbeatTime, 3
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastTransitionTime, 4
            optional :string, :reason, 5
            optional :string, :message, 6
          end

          class NodeConfigSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeConfigSource"

            optional ::K8s::Io::Api::Core::V1::ConfigMapNodeConfigSource, :configMap, 2
          end

          class NodeConfigStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeConfigStatus"

            optional ::K8s::Io::Api::Core::V1::NodeConfigSource, :assigned, 1
            optional ::K8s::Io::Api::Core::V1::NodeConfigSource, :active, 2
            optional ::K8s::Io::Api::Core::V1::NodeConfigSource, :lastKnownGood, 3
            optional :string, :error, 4
          end

          class NodeDaemonEndpoints < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeDaemonEndpoints"

            optional ::K8s::Io::Api::Core::V1::DaemonEndpoint, :kubeletEndpoint, 1
          end

          class NodeList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Node, :items, 2
          end

          class NodeProxyOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeProxyOptions"

            optional :string, :path, 1
          end

          class NodeResources < ::ProtocolBuffers::Message
            # forward declarations
            class CapacityEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.NodeResources"

            # nested messages
            class CapacityEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.NodeResources.CapacityEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::NodeResources::CapacityEntry, :capacity, 1
          end

          class NodeSelector < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeSelector"

            repeated ::K8s::Io::Api::Core::V1::NodeSelectorTerm, :nodeSelectorTerms, 1
          end

          class NodeSelectorRequirement < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeSelectorRequirement"

            optional :string, :key, 1
            optional :string, :operator, 2
            repeated :string, :values, 3
          end

          class NodeSelectorTerm < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeSelectorTerm"

            repeated ::K8s::Io::Api::Core::V1::NodeSelectorRequirement, :matchExpressions, 1
            repeated ::K8s::Io::Api::Core::V1::NodeSelectorRequirement, :matchFields, 2
          end

          class NodeSpec < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeSpec"

            optional :string, :podCIDR, 1
            repeated :string, :podCIDRs, 7
            optional :string, :providerID, 3
            optional :bool, :unschedulable, 4
            repeated ::K8s::Io::Api::Core::V1::Taint, :taints, 5
            optional ::K8s::Io::Api::Core::V1::NodeConfigSource, :configSource, 6
            optional :string, :externalID, 2
          end

          class NodeStatus < ::ProtocolBuffers::Message
            # forward declarations
            class CapacityEntry < ::ProtocolBuffers::Message; end
            class AllocatableEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.NodeStatus"

            # nested messages
            class CapacityEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.NodeStatus.CapacityEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class AllocatableEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.NodeStatus.AllocatableEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::NodeStatus::CapacityEntry, :capacity, 1
            repeated ::K8s::Io::Api::Core::V1::NodeStatus::AllocatableEntry, :allocatable, 2
            optional :string, :phase, 3
            repeated ::K8s::Io::Api::Core::V1::NodeCondition, :conditions, 4
            repeated ::K8s::Io::Api::Core::V1::NodeAddress, :addresses, 5
            optional ::K8s::Io::Api::Core::V1::NodeDaemonEndpoints, :daemonEndpoints, 6
            optional ::K8s::Io::Api::Core::V1::NodeSystemInfo, :nodeInfo, 7
            repeated ::K8s::Io::Api::Core::V1::ContainerImage, :images, 8
            repeated :string, :volumesInUse, 9
            repeated ::K8s::Io::Api::Core::V1::AttachedVolume, :volumesAttached, 10
            optional ::K8s::Io::Api::Core::V1::NodeConfigStatus, :config, 11
          end

          class NodeSystemInfo < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.NodeSystemInfo"

            optional :string, :machineID, 1
            optional :string, :systemUUID, 2
            optional :string, :bootID, 3
            optional :string, :kernelVersion, 4
            optional :string, :osImage, 5
            optional :string, :containerRuntimeVersion, 6
            optional :string, :kubeletVersion, 7
            optional :string, :kubeProxyVersion, 8
            optional :string, :operatingSystem, 9
            optional :string, :architecture, 10
          end

          class ObjectFieldSelector < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ObjectFieldSelector"

            optional :string, :apiVersion, 1
            optional :string, :fieldPath, 2
          end

          class ObjectReference < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ObjectReference"

            optional :string, :kind, 1
            optional :string, :namespace, 2
            optional :string, :name, 3
            optional :string, :uid, 4
            optional :string, :apiVersion, 5
            optional :string, :resourceVersion, 6
            optional :string, :fieldPath, 7
          end

          class PersistentVolume < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolume"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeStatus, :status, 3
          end

          class PersistentVolumeClaim < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaim"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeClaimSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeClaimStatus, :status, 3
          end

          class PersistentVolumeClaimCondition < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimCondition"

            optional :string, :type, 1
            optional :string, :status, 2
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastProbeTime, 3
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastTransitionTime, 4
            optional :string, :reason, 5
            optional :string, :message, 6
          end

          class PersistentVolumeClaimList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::PersistentVolumeClaim, :items, 2
          end

          class PersistentVolumeClaimSpec < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimSpec"

            repeated :string, :accessModes, 1
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::LabelSelector, :selector, 4
            optional ::K8s::Io::Api::Core::V1::ResourceRequirements, :resources, 2
            optional :string, :volumeName, 3
            optional :string, :storageClassName, 5
            optional :string, :volumeMode, 6
            optional ::K8s::Io::Api::Core::V1::TypedLocalObjectReference, :dataSource, 7
          end

          class PersistentVolumeClaimStatus < ::ProtocolBuffers::Message
            # forward declarations
            class CapacityEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimStatus"

            # nested messages
            class CapacityEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimStatus.CapacityEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            optional :string, :phase, 1
            repeated :string, :accessModes, 2
            repeated ::K8s::Io::Api::Core::V1::PersistentVolumeClaimStatus::CapacityEntry, :capacity, 3
            repeated ::K8s::Io::Api::Core::V1::PersistentVolumeClaimCondition, :conditions, 4
          end

          class PersistentVolumeClaimTemplate < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimTemplate"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeClaimSpec, :spec, 2
          end

          class PersistentVolumeClaimVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource"

            optional :string, :claimName, 1
            optional :bool, :readOnly, 2
          end

          class PersistentVolumeList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::PersistentVolume, :items, 2
          end

          class PersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeSource"

            optional ::K8s::Io::Api::Core::V1::GCEPersistentDiskVolumeSource, :gcePersistentDisk, 1
            optional ::K8s::Io::Api::Core::V1::AWSElasticBlockStoreVolumeSource, :awsElasticBlockStore, 2
            optional ::K8s::Io::Api::Core::V1::HostPathVolumeSource, :hostPath, 3
            optional ::K8s::Io::Api::Core::V1::GlusterfsPersistentVolumeSource, :glusterfs, 4
            optional ::K8s::Io::Api::Core::V1::NFSVolumeSource, :nfs, 5
            optional ::K8s::Io::Api::Core::V1::RBDPersistentVolumeSource, :rbd, 6
            optional ::K8s::Io::Api::Core::V1::ISCSIPersistentVolumeSource, :iscsi, 7
            optional ::K8s::Io::Api::Core::V1::CinderPersistentVolumeSource, :cinder, 8
            optional ::K8s::Io::Api::Core::V1::CephFSPersistentVolumeSource, :cephfs, 9
            optional ::K8s::Io::Api::Core::V1::FCVolumeSource, :fc, 10
            optional ::K8s::Io::Api::Core::V1::FlockerVolumeSource, :flocker, 11
            optional ::K8s::Io::Api::Core::V1::FlexPersistentVolumeSource, :flexVolume, 12
            optional ::K8s::Io::Api::Core::V1::AzureFilePersistentVolumeSource, :azureFile, 13
            optional ::K8s::Io::Api::Core::V1::VsphereVirtualDiskVolumeSource, :vsphereVolume, 14
            optional ::K8s::Io::Api::Core::V1::QuobyteVolumeSource, :quobyte, 15
            optional ::K8s::Io::Api::Core::V1::AzureDiskVolumeSource, :azureDisk, 16
            optional ::K8s::Io::Api::Core::V1::PhotonPersistentDiskVolumeSource, :photonPersistentDisk, 17
            optional ::K8s::Io::Api::Core::V1::PortworxVolumeSource, :portworxVolume, 18
            optional ::K8s::Io::Api::Core::V1::ScaleIOPersistentVolumeSource, :scaleIO, 19
            optional ::K8s::Io::Api::Core::V1::LocalVolumeSource, :local, 20
            optional ::K8s::Io::Api::Core::V1::StorageOSPersistentVolumeSource, :storageos, 21
            optional ::K8s::Io::Api::Core::V1::CSIPersistentVolumeSource, :csi, 22
          end

          class PersistentVolumeSpec < ::ProtocolBuffers::Message
            # forward declarations
            class CapacityEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeSpec"

            # nested messages
            class CapacityEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeSpec.CapacityEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::PersistentVolumeSpec::CapacityEntry, :capacity, 1
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeSource, :persistentVolumeSource, 2
            repeated :string, :accessModes, 3
            optional ::K8s::Io::Api::Core::V1::ObjectReference, :claimRef, 4
            optional :string, :persistentVolumeReclaimPolicy, 5
            optional :string, :storageClassName, 6
            repeated :string, :mountOptions, 7
            optional :string, :volumeMode, 8
            optional ::K8s::Io::Api::Core::V1::VolumeNodeAffinity, :nodeAffinity, 9
          end

          class PersistentVolumeStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PersistentVolumeStatus"

            optional :string, :phase, 1
            optional :string, :message, 2
            optional :string, :reason, 3
          end

          class PhotonPersistentDiskVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource"

            optional :string, :pdID, 1
            optional :string, :fsType, 2
          end

          class Pod < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Pod"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PodSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::PodStatus, :status, 3
          end

          class PodAffinity < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodAffinity"

            repeated ::K8s::Io::Api::Core::V1::PodAffinityTerm, :requiredDuringSchedulingIgnoredDuringExecution, 1
            repeated ::K8s::Io::Api::Core::V1::WeightedPodAffinityTerm, :preferredDuringSchedulingIgnoredDuringExecution, 2
          end

          class PodAffinityTerm < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodAffinityTerm"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::LabelSelector, :labelSelector, 1
            repeated :string, :namespaces, 2
            optional :string, :topologyKey, 3
          end

          class PodAntiAffinity < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodAntiAffinity"

            repeated ::K8s::Io::Api::Core::V1::PodAffinityTerm, :requiredDuringSchedulingIgnoredDuringExecution, 1
            repeated ::K8s::Io::Api::Core::V1::WeightedPodAffinityTerm, :preferredDuringSchedulingIgnoredDuringExecution, 2
          end

          class PodAttachOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodAttachOptions"

            optional :bool, :stdin, 1
            optional :bool, :stdout, 2
            optional :bool, :stderr, 3
            optional :bool, :tty, 4
            optional :string, :container, 5
          end

          class PodCondition < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodCondition"

            optional :string, :type, 1
            optional :string, :status, 2
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastProbeTime, 3
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastTransitionTime, 4
            optional :string, :reason, 5
            optional :string, :message, 6
          end

          class PodDNSConfig < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodDNSConfig"

            repeated :string, :nameservers, 1
            repeated :string, :searches, 2
            repeated ::K8s::Io::Api::Core::V1::PodDNSConfigOption, :options, 3
          end

          class PodDNSConfigOption < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodDNSConfigOption"

            optional :string, :name, 1
            optional :string, :value, 2
          end

          class PodExecOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodExecOptions"

            optional :bool, :stdin, 1
            optional :bool, :stdout, 2
            optional :bool, :stderr, 3
            optional :bool, :tty, 4
            optional :string, :container, 5
            repeated :string, :command, 6
          end

          class PodIP < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodIP"

            optional :string, :ip, 1
          end

          class PodList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Pod, :items, 2
          end

          class PodLogOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodLogOptions"

            optional :string, :container, 1
            optional :bool, :follow, 2
            optional :bool, :previous, 3
            optional :int64, :sinceSeconds, 4
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :sinceTime, 5
            optional :bool, :timestamps, 6
            optional :int64, :tailLines, 7
            optional :int64, :limitBytes, 8
            optional :bool, :insecureSkipTLSVerifyBackend, 9
          end

          class PodPortForwardOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodPortForwardOptions"

            repeated :int32, :ports, 1
          end

          class PodProxyOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodProxyOptions"

            optional :string, :path, 1
          end

          class PodReadinessGate < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodReadinessGate"

            optional :string, :conditionType, 1
          end

          class PodSecurityContext < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodSecurityContext"

            optional ::K8s::Io::Api::Core::V1::SELinuxOptions, :seLinuxOptions, 1
            optional ::K8s::Io::Api::Core::V1::WindowsSecurityContextOptions, :windowsOptions, 8
            optional :int64, :runAsUser, 2
            optional :int64, :runAsGroup, 6
            optional :bool, :runAsNonRoot, 3
            repeated :int64, :supplementalGroups, 4
            optional :int64, :fsGroup, 5
            repeated ::K8s::Io::Api::Core::V1::Sysctl, :sysctls, 7
            optional :string, :fsGroupChangePolicy, 9
            optional ::K8s::Io::Api::Core::V1::SeccompProfile, :seccompProfile, 10
          end

          class PodSignature < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodSignature"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::OwnerReference, :podController, 1
          end

          class PodSpec < ::ProtocolBuffers::Message
            # forward declarations
            class NodeSelectorEntry < ::ProtocolBuffers::Message; end
            class OverheadEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.PodSpec"

            # nested messages
            class NodeSelectorEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.PodSpec.NodeSelectorEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            class OverheadEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.PodSpec.OverheadEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::Volume, :volumes, 1
            repeated ::K8s::Io::Api::Core::V1::Container, :initContainers, 20
            repeated ::K8s::Io::Api::Core::V1::Container, :containers, 2
            repeated ::K8s::Io::Api::Core::V1::EphemeralContainer, :ephemeralContainers, 34
            optional :string, :restartPolicy, 3
            optional :int64, :terminationGracePeriodSeconds, 4
            optional :int64, :activeDeadlineSeconds, 5
            optional :string, :dnsPolicy, 6
            repeated ::K8s::Io::Api::Core::V1::PodSpec::NodeSelectorEntry, :nodeSelector, 7
            optional :string, :serviceAccountName, 8
            optional :string, :serviceAccount, 9
            optional :bool, :automountServiceAccountToken, 21
            optional :string, :nodeName, 10
            optional :bool, :hostNetwork, 11
            optional :bool, :hostPID, 12
            optional :bool, :hostIPC, 13
            optional :bool, :shareProcessNamespace, 27
            optional ::K8s::Io::Api::Core::V1::PodSecurityContext, :securityContext, 14
            repeated ::K8s::Io::Api::Core::V1::LocalObjectReference, :imagePullSecrets, 15
            optional :string, :hostname, 16
            optional :string, :subdomain, 17
            optional ::K8s::Io::Api::Core::V1::Affinity, :affinity, 18
            optional :string, :schedulerName, 19
            repeated ::K8s::Io::Api::Core::V1::Toleration, :tolerations, 22
            repeated ::K8s::Io::Api::Core::V1::HostAlias, :hostAliases, 23
            optional :string, :priorityClassName, 24
            optional :int32, :priority, 25
            optional ::K8s::Io::Api::Core::V1::PodDNSConfig, :dnsConfig, 26
            repeated ::K8s::Io::Api::Core::V1::PodReadinessGate, :readinessGates, 28
            optional :string, :runtimeClassName, 29
            optional :bool, :enableServiceLinks, 30
            optional :string, :preemptionPolicy, 31
            repeated ::K8s::Io::Api::Core::V1::PodSpec::OverheadEntry, :overhead, 32
            repeated ::K8s::Io::Api::Core::V1::TopologySpreadConstraint, :topologySpreadConstraints, 33
            optional :bool, :setHostnameAsFQDN, 35
          end

          class PodStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodStatus"

            optional :string, :phase, 1
            repeated ::K8s::Io::Api::Core::V1::PodCondition, :conditions, 2
            optional :string, :message, 3
            optional :string, :reason, 4
            optional :string, :nominatedNodeName, 11
            optional :string, :hostIP, 5
            optional :string, :podIP, 6
            repeated ::K8s::Io::Api::Core::V1::PodIP, :podIPs, 12
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :startTime, 7
            repeated ::K8s::Io::Api::Core::V1::ContainerStatus, :initContainerStatuses, 10
            repeated ::K8s::Io::Api::Core::V1::ContainerStatus, :containerStatuses, 8
            optional :string, :qosClass, 9
            repeated ::K8s::Io::Api::Core::V1::ContainerStatus, :ephemeralContainerStatuses, 13
          end

          class PodStatusResult < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodStatusResult"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PodStatus, :status, 2
          end

          class PodTemplate < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodTemplate"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PodTemplateSpec, :template, 2
          end

          class PodTemplateList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodTemplateList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::PodTemplate, :items, 2
          end

          class PodTemplateSpec < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PodTemplateSpec"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::PodSpec, :spec, 2
          end

          class PortStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PortStatus"

            optional :int32, :port, 1
            optional :string, :protocol, 2
            optional :string, :error, 3
          end

          class PortworxVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PortworxVolumeSource"

            optional :string, :volumeID, 1
            optional :string, :fsType, 2
            optional :bool, :readOnly, 3
          end

          class Preconditions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Preconditions"

            optional :string, :uid, 1
          end

          class PreferAvoidPodsEntry < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PreferAvoidPodsEntry"

            optional ::K8s::Io::Api::Core::V1::PodSignature, :podSignature, 1
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :evictionTime, 2
            optional :string, :reason, 3
            optional :string, :message, 4
          end

          class PreferredSchedulingTerm < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.PreferredSchedulingTerm"

            optional :int32, :weight, 1
            optional ::K8s::Io::Api::Core::V1::NodeSelectorTerm, :preference, 2
          end

          class Probe < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Probe"

            optional ::K8s::Io::Api::Core::V1::Handler, :handler, 1
            optional :int32, :initialDelaySeconds, 2
            optional :int32, :timeoutSeconds, 3
            optional :int32, :periodSeconds, 4
            optional :int32, :successThreshold, 5
            optional :int32, :failureThreshold, 6
          end

          class ProjectedVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ProjectedVolumeSource"

            repeated ::K8s::Io::Api::Core::V1::VolumeProjection, :sources, 1
            optional :int32, :defaultMode, 2
          end

          class QuobyteVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.QuobyteVolumeSource"

            optional :string, :registry, 1
            optional :string, :volume, 2
            optional :bool, :readOnly, 3
            optional :string, :user, 4
            optional :string, :group, 5
            optional :string, :tenant, 6
          end

          class RBDPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.RBDPersistentVolumeSource"

            repeated :string, :monitors, 1
            optional :string, :image, 2
            optional :string, :fsType, 3
            optional :string, :pool, 4
            optional :string, :user, 5
            optional :string, :keyring, 6
            optional ::K8s::Io::Api::Core::V1::SecretReference, :secretRef, 7
            optional :bool, :readOnly, 8
          end

          class RBDVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.RBDVolumeSource"

            repeated :string, :monitors, 1
            optional :string, :image, 2
            optional :string, :fsType, 3
            optional :string, :pool, 4
            optional :string, :user, 5
            optional :string, :keyring, 6
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 7
            optional :bool, :readOnly, 8
          end

          class RangeAllocation < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.RangeAllocation"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional :string, :range, 2
            optional :bytes, :data, 3
          end

          class ReplicationController < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ReplicationController"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::ReplicationControllerSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::ReplicationControllerStatus, :status, 3
          end

          class ReplicationControllerCondition < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ReplicationControllerCondition"

            optional :string, :type, 1
            optional :string, :status, 2
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :lastTransitionTime, 3
            optional :string, :reason, 4
            optional :string, :message, 5
          end

          class ReplicationControllerList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ReplicationControllerList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ReplicationController, :items, 2
          end

          class ReplicationControllerSpec < ::ProtocolBuffers::Message
            # forward declarations
            class SelectorEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.ReplicationControllerSpec"

            # nested messages
            class SelectorEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ReplicationControllerSpec.SelectorEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            optional :int32, :replicas, 1
            optional :int32, :minReadySeconds, 4
            repeated ::K8s::Io::Api::Core::V1::ReplicationControllerSpec::SelectorEntry, :selector, 2
            optional ::K8s::Io::Api::Core::V1::PodTemplateSpec, :template, 3
          end

          class ReplicationControllerStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ReplicationControllerStatus"

            optional :int32, :replicas, 1
            optional :int32, :fullyLabeledReplicas, 2
            optional :int32, :readyReplicas, 4
            optional :int32, :availableReplicas, 5
            optional :int64, :observedGeneration, 3
            repeated ::K8s::Io::Api::Core::V1::ReplicationControllerCondition, :conditions, 6
          end

          class ResourceFieldSelector < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ResourceFieldSelector"

            optional :string, :containerName, 1
            optional :string, :resource, 2
            optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :divisor, 3
          end

          class ResourceQuota < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuota"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::ResourceQuotaSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::ResourceQuotaStatus, :status, 3
          end

          class ResourceQuotaList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuotaList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ResourceQuota, :items, 2
          end

          class ResourceQuotaSpec < ::ProtocolBuffers::Message
            # forward declarations
            class HardEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuotaSpec"

            # nested messages
            class HardEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuotaSpec.HardEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::ResourceQuotaSpec::HardEntry, :hard, 1
            repeated :string, :scopes, 2
            optional ::K8s::Io::Api::Core::V1::ScopeSelector, :scopeSelector, 3
          end

          class ResourceQuotaStatus < ::ProtocolBuffers::Message
            # forward declarations
            class HardEntry < ::ProtocolBuffers::Message; end
            class UsedEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuotaStatus"

            # nested messages
            class HardEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuotaStatus.HardEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class UsedEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ResourceQuotaStatus.UsedEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::ResourceQuotaStatus::HardEntry, :hard, 1
            repeated ::K8s::Io::Api::Core::V1::ResourceQuotaStatus::UsedEntry, :used, 2
          end

          class ResourceRequirements < ::ProtocolBuffers::Message
            # forward declarations
            class LimitsEntry < ::ProtocolBuffers::Message; end
            class RequestsEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.ResourceRequirements"

            # nested messages
            class LimitsEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ResourceRequirements.LimitsEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            class RequestsEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ResourceRequirements.RequestsEntry"

              optional :string, :key, 1
              optional ::K8s::Io::Apimachinery::Pkg::Api::Resource::Quantity, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::ResourceRequirements::LimitsEntry, :limits, 1
            repeated ::K8s::Io::Api::Core::V1::ResourceRequirements::RequestsEntry, :requests, 2
          end

          class SELinuxOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SELinuxOptions"

            optional :string, :user, 1
            optional :string, :role, 2
            optional :string, :type, 3
            optional :string, :level, 4
          end

          class ScaleIOPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ScaleIOPersistentVolumeSource"

            optional :string, :gateway, 1
            optional :string, :system, 2
            optional ::K8s::Io::Api::Core::V1::SecretReference, :secretRef, 3
            optional :bool, :sslEnabled, 4
            optional :string, :protectionDomain, 5
            optional :string, :storagePool, 6
            optional :string, :storageMode, 7
            optional :string, :volumeName, 8
            optional :string, :fsType, 9
            optional :bool, :readOnly, 10
          end

          class ScaleIOVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ScaleIOVolumeSource"

            optional :string, :gateway, 1
            optional :string, :system, 2
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 3
            optional :bool, :sslEnabled, 4
            optional :string, :protectionDomain, 5
            optional :string, :storagePool, 6
            optional :string, :storageMode, 7
            optional :string, :volumeName, 8
            optional :string, :fsType, 9
            optional :bool, :readOnly, 10
          end

          class ScopeSelector < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ScopeSelector"

            repeated ::K8s::Io::Api::Core::V1::ScopedResourceSelectorRequirement, :matchExpressions, 1
          end

          class ScopedResourceSelectorRequirement < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ScopedResourceSelectorRequirement"

            optional :string, :scopeName, 1
            optional :string, :operator, 2
            repeated :string, :values, 3
          end

          class SeccompProfile < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SeccompProfile"

            optional :string, :type, 1
            optional :string, :localhostProfile, 2
          end

          class Secret < ::ProtocolBuffers::Message
            # forward declarations
            class DataEntry < ::ProtocolBuffers::Message; end
            class StringDataEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.Secret"

            # nested messages
            class DataEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.Secret.DataEntry"

              optional :string, :key, 1
              optional :bytes, :value, 2
            end

            class StringDataEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.Secret.StringDataEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional :bool, :immutable, 5
            repeated ::K8s::Io::Api::Core::V1::Secret::DataEntry, :data, 2
            repeated ::K8s::Io::Api::Core::V1::Secret::StringDataEntry, :stringData, 4
            optional :string, :type, 3
          end

          class SecretEnvSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecretEnvSource"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            optional :bool, :optional, 2
          end

          class SecretKeySelector < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecretKeySelector"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            optional :string, :key, 2
            optional :bool, :optional, 3
          end

          class SecretList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecretList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Secret, :items, 2
          end

          class SecretProjection < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecretProjection"

            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :localObjectReference, 1
            repeated ::K8s::Io::Api::Core::V1::KeyToPath, :items, 2
            optional :bool, :optional, 4
          end

          class SecretReference < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecretReference"

            optional :string, :name, 1
            optional :string, :namespace, 2
          end

          class SecretVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecretVolumeSource"

            optional :string, :secretName, 1
            repeated ::K8s::Io::Api::Core::V1::KeyToPath, :items, 2
            optional :int32, :defaultMode, 3
            optional :bool, :optional, 4
          end

          class SecurityContext < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SecurityContext"

            optional ::K8s::Io::Api::Core::V1::Capabilities, :capabilities, 1
            optional :bool, :privileged, 2
            optional ::K8s::Io::Api::Core::V1::SELinuxOptions, :seLinuxOptions, 3
            optional ::K8s::Io::Api::Core::V1::WindowsSecurityContextOptions, :windowsOptions, 10
            optional :int64, :runAsUser, 4
            optional :int64, :runAsGroup, 8
            optional :bool, :runAsNonRoot, 5
            optional :bool, :readOnlyRootFilesystem, 6
            optional :bool, :allowPrivilegeEscalation, 7
            optional :string, :procMount, 9
            optional ::K8s::Io::Api::Core::V1::SeccompProfile, :seccompProfile, 11
          end

          class SerializedReference < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SerializedReference"

            optional ::K8s::Io::Api::Core::V1::ObjectReference, :reference, 1
          end

          class Service < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Service"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            optional ::K8s::Io::Api::Core::V1::ServiceSpec, :spec, 2
            optional ::K8s::Io::Api::Core::V1::ServiceStatus, :status, 3
          end

          class ServiceAccount < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServiceAccount"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ObjectMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ObjectReference, :secrets, 2
            repeated ::K8s::Io::Api::Core::V1::LocalObjectReference, :imagePullSecrets, 3
            optional :bool, :automountServiceAccountToken, 4
          end

          class ServiceAccountList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServiceAccountList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::ServiceAccount, :items, 2
          end

          class ServiceAccountTokenProjection < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServiceAccountTokenProjection"

            optional :string, :audience, 1
            optional :int64, :expirationSeconds, 2
            optional :string, :path, 3
          end

          class ServiceList < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServiceList"

            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::ListMeta, :metadata, 1
            repeated ::K8s::Io::Api::Core::V1::Service, :items, 2
          end

          class ServicePort < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServicePort"

            optional :string, :name, 1
            optional :string, :protocol, 2
            optional :string, :appProtocol, 6
            optional :int32, :port, 3
            optional ::K8s::Io::Apimachinery::Pkg::Util::Intstr::IntOrString, :targetPort, 4
            optional :int32, :nodePort, 5
          end

          class ServiceProxyOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServiceProxyOptions"

            optional :string, :path, 1
          end

          class ServiceSpec < ::ProtocolBuffers::Message
            # forward declarations
            class SelectorEntry < ::ProtocolBuffers::Message; end

            set_fully_qualified_name "k8s.io.api.core.v1.ServiceSpec"

            # nested messages
            class SelectorEntry < ::ProtocolBuffers::Message
              set_fully_qualified_name "k8s.io.api.core.v1.ServiceSpec.SelectorEntry"

              optional :string, :key, 1
              optional :string, :value, 2
            end

            repeated ::K8s::Io::Api::Core::V1::ServicePort, :ports, 1
            repeated ::K8s::Io::Api::Core::V1::ServiceSpec::SelectorEntry, :selector, 2
            optional :string, :clusterIP, 3
            repeated :string, :clusterIPs, 18
            optional :string, :type, 4
            repeated :string, :externalIPs, 5
            optional :string, :sessionAffinity, 7
            optional :string, :loadBalancerIP, 8
            repeated :string, :loadBalancerSourceRanges, 9
            optional :string, :externalName, 10
            optional :string, :externalTrafficPolicy, 11
            optional :int32, :healthCheckNodePort, 12
            optional :bool, :publishNotReadyAddresses, 13
            optional ::K8s::Io::Api::Core::V1::SessionAffinityConfig, :sessionAffinityConfig, 14
            repeated :string, :topologyKeys, 16
            repeated :string, :ipFamilies, 19
            optional :string, :ipFamilyPolicy, 17
            optional :bool, :allocateLoadBalancerNodePorts, 20
          end

          class ServiceStatus < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.ServiceStatus"

            optional ::K8s::Io::Api::Core::V1::LoadBalancerStatus, :loadBalancer, 1
            repeated ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Condition, :conditions, 2
          end

          class SessionAffinityConfig < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.SessionAffinityConfig"

            optional ::K8s::Io::Api::Core::V1::ClientIPConfig, :clientIP, 1
          end

          class StorageOSPersistentVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.StorageOSPersistentVolumeSource"

            optional :string, :volumeName, 1
            optional :string, :volumeNamespace, 2
            optional :string, :fsType, 3
            optional :bool, :readOnly, 4
            optional ::K8s::Io::Api::Core::V1::ObjectReference, :secretRef, 5
          end

          class StorageOSVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.StorageOSVolumeSource"

            optional :string, :volumeName, 1
            optional :string, :volumeNamespace, 2
            optional :string, :fsType, 3
            optional :bool, :readOnly, 4
            optional ::K8s::Io::Api::Core::V1::LocalObjectReference, :secretRef, 5
          end

          class Sysctl < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Sysctl"

            optional :string, :name, 1
            optional :string, :value, 2
          end

          class TCPSocketAction < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.TCPSocketAction"

            optional ::K8s::Io::Apimachinery::Pkg::Util::Intstr::IntOrString, :port, 1
            optional :string, :host, 2
          end

          class Taint < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Taint"

            optional :string, :key, 1
            optional :string, :value, 2
            optional :string, :effect, 3
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::Time, :timeAdded, 4
          end

          class Toleration < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Toleration"

            optional :string, :key, 1
            optional :string, :operator, 2
            optional :string, :value, 3
            optional :string, :effect, 4
            optional :int64, :tolerationSeconds, 5
          end

          class TopologySelectorLabelRequirement < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.TopologySelectorLabelRequirement"

            optional :string, :key, 1
            repeated :string, :values, 2
          end

          class TopologySelectorTerm < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.TopologySelectorTerm"

            repeated ::K8s::Io::Api::Core::V1::TopologySelectorLabelRequirement, :matchLabelExpressions, 1
          end

          class TopologySpreadConstraint < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.TopologySpreadConstraint"

            optional :int32, :maxSkew, 1
            optional :string, :topologyKey, 2
            optional :string, :whenUnsatisfiable, 3
            optional ::K8s::Io::Apimachinery::Pkg::Apis::Meta::V1::LabelSelector, :labelSelector, 4
          end

          class TypedLocalObjectReference < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.TypedLocalObjectReference"

            optional :string, :apiGroup, 1
            optional :string, :kind, 2
            optional :string, :name, 3
          end

          class Volume < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.Volume"

            optional :string, :name, 1
            optional ::K8s::Io::Api::Core::V1::VolumeSource, :volumeSource, 2
          end

          class VolumeDevice < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.VolumeDevice"

            optional :string, :name, 1
            optional :string, :devicePath, 2
          end

          class VolumeMount < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.VolumeMount"

            optional :string, :name, 1
            optional :bool, :readOnly, 2
            optional :string, :mountPath, 3
            optional :string, :subPath, 4
            optional :string, :mountPropagation, 5
            optional :string, :subPathExpr, 6
          end

          class VolumeNodeAffinity < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.VolumeNodeAffinity"

            optional ::K8s::Io::Api::Core::V1::NodeSelector, :required, 1
          end

          class VolumeProjection < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.VolumeProjection"

            optional ::K8s::Io::Api::Core::V1::SecretProjection, :secret, 1
            optional ::K8s::Io::Api::Core::V1::DownwardAPIProjection, :downwardAPI, 2
            optional ::K8s::Io::Api::Core::V1::ConfigMapProjection, :configMap, 3
            optional ::K8s::Io::Api::Core::V1::ServiceAccountTokenProjection, :serviceAccountToken, 4
          end

          class VolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.VolumeSource"

            optional ::K8s::Io::Api::Core::V1::HostPathVolumeSource, :hostPath, 1
            optional ::K8s::Io::Api::Core::V1::EmptyDirVolumeSource, :emptyDir, 2
            optional ::K8s::Io::Api::Core::V1::GCEPersistentDiskVolumeSource, :gcePersistentDisk, 3
            optional ::K8s::Io::Api::Core::V1::AWSElasticBlockStoreVolumeSource, :awsElasticBlockStore, 4
            optional ::K8s::Io::Api::Core::V1::GitRepoVolumeSource, :gitRepo, 5
            optional ::K8s::Io::Api::Core::V1::SecretVolumeSource, :secret, 6
            optional ::K8s::Io::Api::Core::V1::NFSVolumeSource, :nfs, 7
            optional ::K8s::Io::Api::Core::V1::ISCSIVolumeSource, :iscsi, 8
            optional ::K8s::Io::Api::Core::V1::GlusterfsVolumeSource, :glusterfs, 9
            optional ::K8s::Io::Api::Core::V1::PersistentVolumeClaimVolumeSource, :persistentVolumeClaim, 10
            optional ::K8s::Io::Api::Core::V1::RBDVolumeSource, :rbd, 11
            optional ::K8s::Io::Api::Core::V1::FlexVolumeSource, :flexVolume, 12
            optional ::K8s::Io::Api::Core::V1::CinderVolumeSource, :cinder, 13
            optional ::K8s::Io::Api::Core::V1::CephFSVolumeSource, :cephfs, 14
            optional ::K8s::Io::Api::Core::V1::FlockerVolumeSource, :flocker, 15
            optional ::K8s::Io::Api::Core::V1::DownwardAPIVolumeSource, :downwardAPI, 16
            optional ::K8s::Io::Api::Core::V1::FCVolumeSource, :fc, 17
            optional ::K8s::Io::Api::Core::V1::AzureFileVolumeSource, :azureFile, 18
            optional ::K8s::Io::Api::Core::V1::ConfigMapVolumeSource, :configMap, 19
            optional ::K8s::Io::Api::Core::V1::VsphereVirtualDiskVolumeSource, :vsphereVolume, 20
            optional ::K8s::Io::Api::Core::V1::QuobyteVolumeSource, :quobyte, 21
            optional ::K8s::Io::Api::Core::V1::AzureDiskVolumeSource, :azureDisk, 22
            optional ::K8s::Io::Api::Core::V1::PhotonPersistentDiskVolumeSource, :photonPersistentDisk, 23
            optional ::K8s::Io::Api::Core::V1::ProjectedVolumeSource, :projected, 26
            optional ::K8s::Io::Api::Core::V1::PortworxVolumeSource, :portworxVolume, 24
            optional ::K8s::Io::Api::Core::V1::ScaleIOVolumeSource, :scaleIO, 25
            optional ::K8s::Io::Api::Core::V1::StorageOSVolumeSource, :storageos, 27
            optional ::K8s::Io::Api::Core::V1::CSIVolumeSource, :csi, 28
            optional ::K8s::Io::Api::Core::V1::EphemeralVolumeSource, :ephemeral, 29
          end

          class VsphereVirtualDiskVolumeSource < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource"

            optional :string, :volumePath, 1
            optional :string, :fsType, 2
            optional :string, :storagePolicyName, 3
            optional :string, :storagePolicyID, 4
          end

          class WeightedPodAffinityTerm < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.WeightedPodAffinityTerm"

            optional :int32, :weight, 1
            optional ::K8s::Io::Api::Core::V1::PodAffinityTerm, :podAffinityTerm, 2
          end

          class WindowsSecurityContextOptions < ::ProtocolBuffers::Message
            set_fully_qualified_name "k8s.io.api.core.v1.WindowsSecurityContextOptions"

            optional :string, :gmsaCredentialSpecName, 1
            optional :string, :gmsaCredentialSpec, 2
            optional :string, :runAsUserName, 3
          end

        end
      end
    end
  end
end
