// Container_Server
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker Server Information" )
]
class Container_Server : CIM_InstalledProduct
{
	[ Description ( "Count of containers" ) ]
	uint16 Containers;

	[ Description ( "Docker root directory" ) ]
	string DockerRootDir;

	[ Description ( "Server hostname" ) ]
	string Hostname;

	[ Description ( "Docker driver" ) ]
	string Driver;

	[ Description ( "Current operating status for the Driver" ),
	  ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
	  Values { "Unknown", "Other", "OK", "Degraded", "Stressed", "Predictive Failure", "Error", "Non-Recoverable Error", "Starting", "Stopping", "Stopped", "In Service", "No Contact",  "Lost Communication", "Aborted", "Dormant", "Supporting Entity in Error", "Completed", "Power Mode", "Insufficient Privileges", "Authentication File in Error" } ]
	uint16 DriverStatus;

	[ Description ( "Count of Images" ) ]
	uint16 Images;

	[ Description ( "Docker InitPath" ) ]
	string InitPath;

	[ Description ( "Kernel version" ) ]
	string KernelVersion;

	[ Description ( "Current operating status for the MySQL instance" ),
	  ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
	  Values { "Unknown", "Other", "OK", "Degraded", "Stressed", "Predictive Failure", "Error", "Non-Recoverable Error", "Starting", "Stopping", "Stopped", "In Service", "No Contact",  "Lost Communication", "Aborted", "Dormant", "Supporting Entity in Error", "Completed", "Power Mode", "Insufficient Privileges", "Authentication File in Error" } ]
	uint16 OperatingStatus;

	[ Description ( "Total installed memory in bytes" ) ]
	uint64 MemTotal;

	[ Description ( "Memory Limit in bytes" ) ]
	uint64 MemLimit;

	[ Description ( "Swap Limit in bytes" ) ]
	uint64 SwapLimit;

	[ Description ( "Number of CPUs" ) ]
	uint16 NCPU;
};

// Container_Container
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker Container Information" )
]
class Container_Container : CIM_VirtualComputerSystem
{
	[ Description ( "Active Ports for the Container" ) ]
	string Ports;

	[ Description ( "Command for the Container" ) ]
	string Command;

	[ Description ( "Image for the Container" ) ]
	string Image;

	[ Description ( "ID for the Container" ) ]
	string InstanceID;

	[ Description ( "Readwrite size for the Container" ) ]
	string SizeRW;
};


// Container_ContainerStatistics
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker Container Statistical Information" )
]
class Container_ContainerStatistics : CIM_StatisticalData
{
	[ Description ( "Update time:seconds since 1/1/1970 * 1000 " ) ]
	uint64 updatetime;

	[ Description ( "Network received bytes for the container instance" ) ]
	uint64 NetRXBytes;

	[ Description ( "Network transmitted bytes for the container instance" ) ]
	uint64 NetTXBytes;

	[ Description ( "Network total bytes for the container instance" ) ]
	uint64 NetBytes;

	[ Description ( "Network received kilobytes per second for the container instance" ) ]
	uint32 NetRXKBytesPerSec;

	[ Description ( "Network transmitted kilobytes per second for the container instance" ) ]
	uint32 NetTXKBytesPerSec;

	[ Description ( "Memory cache in megabytes for the container instance" ) ]
	uint32 MemCacheMB;

	[ Description ( "Memory rss in megabytes for the container instance" ) ]
	uint32 MemRSSMB;

	[ Description ( "Memory page faults for the container instance" ) ]
	uint16 MemPGFault;

	[ Description ( "Memory major page faultsfor the container instance" ) ]
	uint16 MemPGMajFault;
		 
	[ Description ( "Memory page faults per second for the container instance" ) ]
	uint16 MemPGFaultPerSec;

	[ Description ( "Memory major page faults per second for the container instance" ) ]
	uint16 MemPGMajFaultPerSec;

	[ Description ( "Memory swap used in megabytes for the container instance" ) ]
	uint32 MemSwapMB;

	[ Description ( "Memory unvicatable in megabytes for the container instance" ) ]
	uint32 MemUnevictableMB;

	[ Description ( "Memory limit in megabytes for the container instance" ) ]
	uint32 MemLimitMB;

	[ Description ( "Memory swap limit in megabytes for the container instance" ) ]
	uint32 MemSWLimitMB;

	[ Description ( "Percent of the memory limit currently used for the container instance" ) ]
	uint16 MemUsedPct;

	[ Description ( "Percent of the memory swap limit currently used for the container instance" ) ]
	uint16 MemSWUsedPct;

	[ Description ( "CPU (total) used for container instance" ) ]
	uint64 CPUTotal;

	[ Description ( "System CPU (total) used for container instance" ) ]
	uint64 CPUSystem;

	[ Description ( "Percentage of CPU (total) used for container instance" ) ]
	uint16 CPUTotalPct;

	[ Description ( "Percentage of CPU (total) used for container instance" ) ]
	uint16 CPUSystemPct;
	   
	[ Description ( "CPU (host) used for host vm" ) ]
	uint64 CPUHost;
};

// Container_ContainerProcessorStatistics
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker Container Processor Statistical Information" )
]
class Container_ContainerProcessorStatistics : CIM_StatisticalData
{
	[ Description ( "ID of the processor instance" ) ]
	uint16 ProcessorID;

	[ Description ( "CPU used for the processor instance" ) ]
	uint64 CPUTotal;

	[ Description ( "Percentage of CPU used for the processor instance" ) ]
	uint16 CPUTotalPct;
};

// Container_ImageInventory
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker image inventory data" )
]
class Container_ImageInventory : CIM_ManagedElement
{
	[ Description ( "Image name" ) ]
	String Image;

	[ Description ( "Repository name" ) ]
	String Repository;

	[ Description ( "Image tag" ) ]
	String ImageTag;

	[ Description ( "Host name of Docker host" ) ]
	String Computer;

	[ Description ( "Number of running containers" ) ]
	Uint32 Running;

	[ Description ( "Number of stopped containers" ) ]
	Uint32 Stopped;

	[ Description ( "Number of failed containers" ) ]
	Uint32 Failed;

	[ Description ( "Number of paused containers" ) ]
	Uint32 Paused;
};

// Container_DaemonEvent
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker daemon event" )
]
class Container_DaemonEvent : CIM_ManagedElement
{
	[ Description ( "Host name of Docker host" ) ]
	String Computer;

	[ Description ( "Timestamp of event" ) ]
	String TimeOfCommand;

	[ Description ( "Event type" ) ]
	String Command;

	[ Description ( "Container ID" ) ]
	String Id;
};

// Container_ContainerInventory
// -------------------------------------------------------------------
[   Version ( "1.0.0" ),
	Description ( "Docker container inventory data" )
]
class Container_ContainerInventory : CIM_ManagedElement
{
	[ Description ( "Time when container was created" ) ]
	String CreatedTime;

	[ Description ( "State of container" ) ]
	String State;

	[ Description ( "Exit code of container" ) ]
	uint32 ExitCode;

	[ Description ( "Time when container started" ) ]
	String StartedTime;

	[ Description ( "Time when container exited" ) ]
	String FinishedTime;

	[ Description ( "Image ID of container" ) ]
	String ImageId;

	[ Description ( "Compose group which contains the container" ) ]
	String ComposeGroup;

	[ Description ( "Host name of container" ) ]
	String ContainerHostname;

	[ Description ( "Host name of Docker host" ) ]
	String Computer;

	[ Description ( "JSON of command run inside container" ) ]
	String Command;

	[ Description ( "JSON of container environment variables" ) ]
	String EnvironmentVar;

	[ Description ( "JSON of container port mappings" ) ]
	String Ports;

	[ Description ( "JSON of container links" ) ]
	String Links;
};